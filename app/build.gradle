apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
android {

    compileSdkVersion rootProject.ext.myCompileSdkVersion
    buildToolsVersion rootProject.ext.myBuildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.myApplicationId
        minSdkVersion rootProject.ext.myMinSdkVersion
        targetSdkVersion rootProject.ext.myTargetSdkVersion
        versionCode rootProject.ext.myVersionCode
        versionName rootProject.ext.myVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk {  abiFilters "armeabi", "armeabi-v7a", "x86" }
    }

    signingConfigs {
        myConfig {
            storeFile file(rootProject.ext.myReleaseSignFile)
            storePassword rootProject.ext.mySignStorePassword
            keyAlias rootProject.ext.mySignAlias
            keyPassword rootProject.ext.mySignKeyPassword
        }
        myDebugConfig {
            storeFile file('debugkeystore.jks')
            storePassword '009120'
            keyAlias 'china'
            keyPassword '009120'
        }
    }

    buildTypes {
        debug {
            debuggable true
            shrinkResources false
            signingConfig signingConfigs.myDebugConfig
            buildConfigField "String", "DISPATCH_SERVICE", DUBUG_DISPATCH_SERVICE
            buildConfigField "String", "RABBIT_HOST", DUBUG_RABBITMQ_HOST
            buildConfigField "Integer", "RABBIT_PORT", DUBUG_RABBITMQ_PORT
            buildConfigField "String", "RABBIT_VHOST", DUBUG_RABBITMQ_VHOST
            buildConfigField "String", "RABBIT_NAME", DUBUG_RABBITMQ_NAME
            buildConfigField "String", "RABBIT_PASSWORD", DUBUG_RABBITMQ_PASSWORD
            buildConfigField "String", "SUPTER_IP", DUBUG_SUPTER_IP
            buildConfigField "Integer", "SUPTER_PORT", DUBUG_SUPTER_PORT

        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
            buildConfigField "String", "DISPATCH_SERVICE", RELEASE_DISPATCH_SERVICE
            buildConfigField "String", "RABBIT_HOST", RELEASE_RABBITMQ_HOST
            buildConfigField "Integer", "RABBIT_PORT", RELEASE_RABBITMQ_PORT
            buildConfigField "String", "RABBIT_VHOST", RELEASE_RABBITMQ_VHOST
            buildConfigField "String", "RABBIT_NAME", RELEASE_RABBITMQ_NAME
            buildConfigField "String", "RABBIT_PASSWORD", RELEASE_RABBITMQ_PASSWORD
            buildConfigField "String", "SUPTER_IP", RELEASE_SUPTER_IP
            buildConfigField "Integer", "SUPTER_PORT", RELEASE_SUPTER_PORT
        }
    }
    greendao{
        schemaVersion 1
        daoPackage 'com.dispatching.feima.gen'
        targetGenDir 'src/main/java'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "dispatching-v" + rootProject.ext.myVersionName +  ".apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "dispatching-v" + rootProject.ext.myVersionName +  "_debug.apk"
            }
            output.outputFile = new File(file.parent,
                    fileName)
            //生成的文件名
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile rootProject.ext.myDependencies["myGreendao"]
    compile rootProject.ext.myDependencies["myDsign"]
    compile rootProject.ext.myDependencies["myRetrofit2"]
    compile rootProject.ext.myDependencies["myRetrofit2ConverterGson"]
    compile rootProject.ext.myDependencies["myRetrofit2ConverterScalars"]
    compile rootProject.ext.myDependencies["myRetrofit2AdapterRxjava"]
    compile rootProject.ext.myDependencies["myOkhttp"]
    compile rootProject.ext.myDependencies["myGson"]
    compile rootProject.ext.myDependencies["myRxjava"]
    compile rootProject.ext.myDependencies["myRxandroid"]
    compile rootProject.ext.myDependencies["myDagger"]
    apt rootProject.ext.myDependencies["myDaggerCompiler"]
    provided rootProject.ext.myDependencies["myDaggerJavaxAnnotation"]
    compile rootProject.ext.myDependencies["myButterknife"]
    apt rootProject.ext.myDependencies["myButterknifeApt"]
    compile rootProject.ext.myDependencies["myCardview"]
    compile rootProject.ext.myDependencies["myRxbinding"]
    compile rootProject.ext.myDependencies["myRxPermission"]
    compile rootProject.ext.myDependencies["my3DMap"]
    compile rootProject.ext.myDependencies["mySearch"]
    compile rootProject.ext.myDependencies["myLocation"]
    compile 'com.youth.banner:banner:1.4.9'  //最新版本
    compile rootProject.ext.myDependencies["myGlide"]
    compile 'com.github.siyamed:android-shape-imageview:0.9.+@aar'
    compile project(path: ':mylibrary')

    compile 'com.soundcloud.android:android-crop:1.0.1@aar'
    compile 'com.darsh.multipleimageselect:multipleimageselect:1.0.4'
    compile 'me.shaohui.advancedluban:library:1.3.5'

}
